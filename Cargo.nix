# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.
args @ {
  release ? true,
  rootFeatures ? [
    "app-queue/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  cargoUnstableFlags ? null,
  rustcLinkFlags ? null,
  rustcBuildFlags ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
  ignoreLockHash,
}: let
  nixifiedLockHash = "5b45b60e701d0ceb5c0cad54156c778a4acc13d9c1ced18695c35da6eec7cd10";
  workspaceSrc =
    if args.workspaceSrc == null
    then ./.
    else args.workspaceSrc;
  currentLockHash = builtins.hashFile "sha256" (workspaceSrc + /Cargo.lock);
  lockHashIgnored =
    if ignoreLockHash
    then builtins.trace "Ignoring lock hash" ignoreLockHash
    else ignoreLockHash;
in
  if !lockHashIgnored && (nixifiedLockHash != currentLockHash)
  then throw "Cargo.nix ${nixifiedLockHash} is out of sync with Cargo.lock ${currentLockHash}"
  else let
    inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
    profilesByName = {
    };
    rootFeatures' = expandFeatures rootFeatures;
    overridableMkRustCrate = f: let
      drvs = genDrvsByProfile profilesByName ({
        profile,
        profileName,
      }:
        mkRustCrate ({inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts cargoUnstableFlags rustcLinkFlags rustcBuildFlags;} // (f profileName)));
    in
      {
        compileMode ? null,
        profileName ? decideProfile compileMode release,
      }: let
        drv = drvs.${profileName};
      in
        if compileMode == null
        then drv
        else drv.override {inherit compileMode;};
  in {
    cargo2nixVersion = "0.11.0";
    workspace = {
      app-queue = rustPackages.unknown.app-queue."0.2.0";
    };
    "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.24.1" = overridableMkRustCrate (profileName: rec {
      name = "addr2line";
      version = "0.24.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f5fb1d8e4442bd405fdfd1dacb42792696b0cf9cb15882e5d097b742a676d375";
      };
      dependencies = {
        gimli = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.31.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".adler2."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "adler2";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" = overridableMkRustCrate (profileName: rec {
      name = "ahash";
      version = "0.8.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011";
      };
      features = builtins.concatLists [
        ["default"]
        ["getrandom"]
        ["runtime-rng"]
        ["std"]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" {inherit profileName;}).out;
        ${
          if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none")
          then "once_cell"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" {inherit profileName;}).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.18" = overridableMkRustCrate (profileName: rec {
      name = "allocator-api2";
      version = "0.2.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f";
      };
      features = builtins.concatLists [
        ["alloc"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "android-tzdata";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "android_system_properties";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311";
      };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.87" = overridableMkRustCrate (profileName: rec {
      name = "anyhow";
      version = "1.0.87";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "10f00e1f6e58a40e807377c75c6a7f97bf9044fab57816f2414e6f5f4499d7b8";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "unknown".app-queue."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "app-queue";
      version = "0.2.0";
      registry = "unknown";
      src = fetchCrateLocal workspaceSrc;
      features = builtins.concatLists [
        (lib.optional (rootFeatures' ? "app-queue/default") "default")
        (lib.optional (rootFeatures' ? "app-queue/postgres") "postgres")
        (lib.optional (rootFeatures' ? "app-queue/default" || rootFeatures' ? "app-queue/sqlite") "sqlite")
      ];
      dependencies = {
        anyhow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.87" {inherit profileName;}).out;
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.82" {profileName = "__noProfile";}).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" {inherit profileName;}).out;
        ciborium = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.2" {inherit profileName;}).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" {inherit profileName;}).out;
        sqlx = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx."0.7.4" {inherit profileName;}).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.40.0" {inherit profileName;}).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" {inherit profileName;}).out;
        typetag = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typetag."0.2.18" {inherit profileName;}).out;
        uuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.10.0" {inherit profileName;}).out;
      };
      devDependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.40.0" {inherit profileName;}).out;
        tracing_subscriber = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.82" = overridableMkRustCrate (profileName: rec {
      name = "async-trait";
      version = "0.1.82";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a27b8a3a6e1a44fa4c8baf1f653e4172e81486d4941f2237e20dc2d0cf4ddff1";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" = overridableMkRustCrate (profileName: rec {
      name = "atoi";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f28d99ec8bfea296261ca1af174f24225171fea9664ba9003cbebee704810528";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "autocfg";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.74" = overridableMkRustCrate (profileName: rec {
      name = "backtrace";
      version = "0.3.74";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        ${
          if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
          then "addr2line"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.24.1" {inherit profileName;}).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
          then "miniz_oxide"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.0" {inherit profileName;}).out;
        ${
          if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
          then "object"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.36.4" {inherit profileName;}).out;
        rustc_demangle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.24" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_targets"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" = overridableMkRustCrate (profileName: rec {
      name = "base64";
      version = "0.21.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" = overridableMkRustCrate (profileName: rec {
      name = "base64ct";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b";
      };
      features = builtins.concatLists [
        ["alloc"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" = overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de";
      };
      features = builtins.concatLists [
        ["serde"]
        ["std"]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" = overridableMkRustCrate (profileName: rec {
      name = "block-buffer";
      version = "0.10.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71";
      };
      dependencies = {
        generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.16.0" = overridableMkRustCrate (profileName: rec {
      name = "bumpalo";
      version = "3.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c";
      };
      features = builtins.concatLists [
        ["default"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "byteorder";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b";
      };
      features = builtins.concatLists [
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytes."1.7.1" = overridableMkRustCrate (profileName: rec {
      name = "bytes";
      version = "1.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8318a53db07bb3f8dca91a600466bdb3f2eaadeedfdbcf02e1accbad9271ba50";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".cc."1.1.18" = overridableMkRustCrate (profileName: rec {
      name = "cc";
      version = "1.1.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b62ac837cdb5cb22e10a256099b4fc502b1dfe560cb282963a974d7abd80e476";
      };
      dependencies = {
        shlex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shlex."1.3.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "cfg-if";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" = overridableMkRustCrate (profileName: rec {
      name = "chrono";
      version = "0.4.38";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["android-tzdata"]
        ["clock"]
        ["default"]
        ["iana-time-zone"]
        ["js-sys"]
        ["now"]
        ["oldtime"]
        ["std"]
        ["wasm-bindgen"]
        ["wasmbind"]
        ["winapi"]
        ["windows-targets"]
      ];
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "android"
          then "android_tzdata"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix
          then "iana_time_zone"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.60" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi")
          then "js_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.70" {inherit profileName;}).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi")
          then "wasm_bindgen"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.93" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_targets"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        ciborium_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" {inherit profileName;}).out;
        ciborium_ll = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.2" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium-io";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "ciborium-ll";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9";
      };
      dependencies = {
        ciborium_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.2" {inherit profileName;}).out;
        half = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.6" = overridableMkRustCrate (profileName: rec {
      name = "const-oid";
      version = "0.9.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" = overridableMkRustCrate (profileName: rec {
      name = "core-foundation-sys";
      version = "0.8.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b";
      };
      features = builtins.concatLists [
        ["default"]
        ["link"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" = overridableMkRustCrate (profileName: rec {
      name = "cpufeatures";
      version = "0.2.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0";
      };
      dependencies = {
        ${
          if hostPlatform.config == "aarch64-linux-android" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.cpu.name == "loongarch64" && hostPlatform.parsed.kernel.name == "linux"
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crc."3.2.1" = overridableMkRustCrate (profileName: rec {
      name = "crc";
      version = "3.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "69e6e4d7b33a94f0991c26729976b10ebde1d34c3ee82408fb536164fa10d636";
      };
      dependencies = {
        crc_catalog = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc-catalog."2.4.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crc-catalog."2.4.0" = overridableMkRustCrate (profileName: rec {
      name = "crc-catalog";
      version = "2.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.3.11" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-queue";
      version = "0.3.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
      dependencies = {
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.20" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-utils";
      version = "0.8.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80";
      };
      features = builtins.concatLists [
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" = overridableMkRustCrate (profileName: rec {
      name = "crunchy";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7";
      };
      features = builtins.concatLists [
        ["default"]
        ["limit_128"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" = overridableMkRustCrate (profileName: rec {
      name = "crypto-common";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;}).out;
        typenum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".der."0.7.9" = overridableMkRustCrate (profileName: rec {
      name = "der";
      version = "0.7.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f55bf8e7b65898637379c1b74eb1551107c8294ed26d855ceb9fd1a09cfc9bc0";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["oid"]
        ["pem"]
        ["std"]
        ["zeroize"]
      ];
      dependencies = {
        const_oid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.6" {inherit profileName;}).out;
        pem_rfc7468 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.7.0" {inherit profileName;}).out;
        zeroize = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" = overridableMkRustCrate (profileName: rec {
      name = "digest";
      version = "0.10.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["block-buffer"]
        ["const-oid"]
        ["core-api"]
        ["default"]
        ["mac"]
        ["oid"]
        ["std"]
        ["subtle"]
      ];
      dependencies = {
        block_buffer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" {inherit profileName;}).out;
        const_oid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.6" {inherit profileName;}).out;
        crypto_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" {inherit profileName;}).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" = overridableMkRustCrate (profileName: rec {
      name = "dotenvy";
      version = "0.15.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" = overridableMkRustCrate (profileName: rec {
      name = "either";
      version = "1.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0";
      };
      features = builtins.concatLists [
        ["default"]
        ["serde"]
        ["use_std"]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "equivalent";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".erased-serde."0.4.5" = overridableMkRustCrate (profileName: rec {
      name = "erased-serde";
      version = "0.4.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "24e2389d65ab4fab27dc2a5de7b191e1f6617d1f1c8855c0dc569c94a4cbb18d";
      };
      features = builtins.concatLists [
        ["alloc"]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        typeid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typeid."1.0.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".errno."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "errno";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        ${
          if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "hermit" || hostPlatform.parsed.kernel.name == "wasi"
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".etcetera."0.8.0" = overridableMkRustCrate (profileName: rec {
      name = "etcetera";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "136d1b5283a1ab77bd9257427ffd09d8667ced0570b6f938942bc7568ed5b943";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        home = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.9" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" = overridableMkRustCrate (profileName: rec {
      name = "event-listener";
      version = "2.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" = overridableMkRustCrate (profileName: rec {
      name = "fastrand";
      version = "2.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".flume."0.11.0" = overridableMkRustCrate (profileName: rec {
      name = "flume";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "55ac459de2512911e4b674ce33cf20befaba382d05b62b008afc1c8b57cbf181";
      };
      features = builtins.concatLists [
        ["async"]
        ["futures-core"]
        ["futures-sink"]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" {inherit profileName;}).out;
        spin1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" = overridableMkRustCrate (profileName: rec {
      name = "form_urlencoded";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
      dependencies = {
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-channel";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["futures-sink"]
        ["sink"]
        ["std"]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-core";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-executor";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" {inherit profileName;}).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-intrusive."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "futures-intrusive";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1d930c203dd0b6ff06e0201a4a2fe9149b43c684fd4420555b26d21b1a02956f";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["parking_lot"]
        ["std"]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        lock_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" {inherit profileName;}).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-io";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-sink";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-task";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-util";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["futures-io"]
        ["futures-sink"]
        ["io"]
        ["memchr"]
        ["sink"]
        ["slab"]
        ["std"]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" {inherit profileName;}).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" {inherit profileName;}).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.14" {inherit profileName;}).out;
        pin_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" {inherit profileName;}).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" = overridableMkRustCrate (profileName: rec {
      name = "generic-array";
      version = "0.14.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a";
      };
      features = builtins.concatLists [
        ["more_lengths"]
      ];
      dependencies = {
        typenum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" {inherit profileName;}).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" = overridableMkRustCrate (profileName: rec {
      name = "getrandom";
      version = "0.2.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "wasi"
          then "wasi"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gimli."0.31.0" = overridableMkRustCrate (profileName: rec {
      name = "gimli";
      version = "0.31.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "32085ea23f3234fc7846555e85283ba4de91e21016dc0455a16286d87a292d64";
      };
      features = builtins.concatLists [
        ["read"]
        ["read-core"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" = overridableMkRustCrate (profileName: rec {
      name = "half";
      version = "2.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "spirv"
          then "crunchy"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.14.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1";
      };
      features = builtins.concatLists [
        ["ahash"]
        ["allocator-api2"]
        ["default"]
        ["inline-more"]
        ["raw"]
      ];
      dependencies = {
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" {inherit profileName;}).out;
        allocator_api2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.18" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashlink."0.8.4" = overridableMkRustCrate (profileName: rec {
      name = "hashlink";
      version = "0.8.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e8094feaf31ff591f651a2664fb9cfd92bba7a60ce3197265e9482ebe753c8f7";
      };
      dependencies = {
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "heck";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8";
      };
      features = builtins.concatLists [
        ["default"]
        ["unicode"]
        ["unicode-segmentation"]
      ];
      dependencies = {
        unicode_segmentation = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.11.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "hermit-abi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024";
      };
      features = builtins.concatLists [
        ["default"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "hex";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.4" = overridableMkRustCrate (profileName: rec {
      name = "hkdf";
      version = "0.12.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7b5f8eb2ad728638ea2c7d47a21db23b7b58a72ed6a38256b8a1849f15fbbdf7";
      };
      dependencies = {
        hmac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "hmac";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e";
      };
      features = builtins.concatLists [
        ["reset"]
      ];
      dependencies = {
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".home."0.5.9" = overridableMkRustCrate (profileName: rec {
      name = "home";
      version = "0.5.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5";
      };
      dependencies = {
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.60" = overridableMkRustCrate (profileName: rec {
      name = "iana-time-zone";
      version = "0.1.60";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141";
      };
      features = builtins.concatLists [
        ["fallback"]
      ];
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "android"
          then "android_system_properties"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios"
          then "core_foundation_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "haiku"
          then "iana_time_zone_haiku"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32"
          then "js_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.70" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32"
          then "wasm_bindgen"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.93" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "windows"
          then "windows_core"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "iana-time-zone-haiku";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f";
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.18" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".idna."0.5.0" = overridableMkRustCrate (profileName: rec {
      name = "idna";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
      dependencies = {
        unicode_bidi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.15" {inherit profileName;}).out;
        unicode_normalization = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.23" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".indexmap."2.5.0" = overridableMkRustCrate (profileName: rec {
      name = "indexmap";
      version = "2.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "68b900aa2f7301e21c36462b170ee99994de34dff39a4a6a528e80e7376d07e5";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        equivalent = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" {inherit profileName;}).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".inventory."0.3.15" = overridableMkRustCrate (profileName: rec {
      name = "inventory";
      version = "0.3.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f958d3d68f4167080a18141e10381e7634563984a537f2a49a30fd8e53ac5767";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" = overridableMkRustCrate (profileName: rec {
      name = "itoa";
      version = "1.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.70" = overridableMkRustCrate (profileName: rec {
      name = "js-sys";
      version = "0.3.70";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a";
      };
      dependencies = {
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.93" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "lazy_static";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe";
      };
      features = builtins.concatLists [
        ["spin"]
        ["spin_no_std"]
      ];
      dependencies = {
        spin = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" = overridableMkRustCrate (profileName: rec {
      name = "libc";
      version = "0.2.158";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d8adc4bb1803a324070e64a98ae98f38934d91957a99cfb3a43dcbc01bc56439";
      };
      features = builtins.concatLists [
        ["default"]
        ["extra_traits"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" = overridableMkRustCrate (profileName: rec {
      name = "libm";
      version = "0.2.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058";
      };
      features = builtins.concatLists [
        ["default"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".libsqlite3-sys."0.27.0" = overridableMkRustCrate (profileName: rec {
      name = "libsqlite3-sys";
      version = "0.27.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "cf4e226dcd58b4be396f7bd3c20da8fdee2911400705297ba7d2d7cc2c30f716";
      };
      features = builtins.concatLists [
        ["bundled"]
        ["bundled_bindings"]
        ["cc"]
        ["pkg-config"]
        ["unlock_notify"]
        ["vcpkg"]
      ];
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.1.18" {profileName = "__noProfile";}).out;
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.30" {profileName = "__noProfile";}).out;
        vcpkg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.14" = overridableMkRustCrate (profileName: rec {
      name = "linux-raw-sys";
      version = "0.4.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89";
      };
      features = builtins.concatLists [
        ["elf"]
        ["errno"]
        ["general"]
        ["ioctl"]
        ["no_std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" = overridableMkRustCrate (profileName: rec {
      name = "lock_api";
      version = "0.4.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17";
      };
      features = builtins.concatLists [
        ["atomic_usize"]
        ["default"]
      ];
      dependencies = {
        scopeguard = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" {inherit profileName;}).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.3.0" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" = overridableMkRustCrate (profileName: rec {
      name = "log";
      version = "0.4.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24";
      };
      features = builtins.concatLists [
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" = overridableMkRustCrate (profileName: rec {
      name = "md-5";
      version = "0.10.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" = overridableMkRustCrate (profileName: rec {
      name = "memchr";
      version = "2.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "minimal-lexical";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a";
      };
      features = builtins.concatLists [
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.0" = overridableMkRustCrate (profileName: rec {
      name = "miniz_oxide";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1";
      };
      dependencies = {
        adler2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler2."2.0.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mio."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "mio";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec";
      };
      features = builtins.concatLists [
        ["net"]
        ["os-ext"]
        ["os-poll"]
      ];
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "hermit"
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.9" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi"
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "wasi"
          then "wasi"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" = overridableMkRustCrate (profileName: rec {
      name = "nom";
      version = "7.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        minimal_lexical = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" = overridableMkRustCrate (profileName: rec {
      name = "nu-ansi-term";
      version = "0.46.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84";
      };
      dependencies = {
        overload = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "windows"
          then "winapi"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-bigint-dig."0.8.4" = overridableMkRustCrate (profileName: rec {
      name = "num-bigint-dig";
      version = "0.8.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "dc84195820f291c7697304f3cbdadd1cb7199c0efc917ff5eafd71225c136151";
      };
      features = builtins.concatLists [
        ["i128"]
        ["prime"]
        ["rand"]
        ["u64_digit"]
        ["zeroize"]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" {inherit profileName;}).out;
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" {inherit profileName;}).out;
        libm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" {inherit profileName;}).out;
        num_integer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" {inherit profileName;}).out;
        num_iter = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.45" {inherit profileName;}).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;}).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" {inherit profileName;}).out;
        zeroize = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" = overridableMkRustCrate (profileName: rec {
      name = "num-integer";
      version = "0.1.46";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f";
      };
      features = builtins.concatLists [
        ["i128"]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.45" = overridableMkRustCrate (profileName: rec {
      name = "num-iter";
      version = "0.1.45";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf";
      };
      dependencies = {
        num_integer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" {inherit profileName;}).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.3.0" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" = overridableMkRustCrate (profileName: rec {
      name = "num-traits";
      version = "0.2.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841";
      };
      features = builtins.concatLists [
        ["i128"]
        ["libm"]
        ["std"]
      ];
      dependencies = {
        libm = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.8" {inherit profileName;}).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.3.0" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" = overridableMkRustCrate (profileName: rec {
      name = "num_cpus";
      version = "1.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43";
      };
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "hermit"
          then "hermit_abi"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.9" {inherit profileName;}).out;
        ${
          if !hostPlatform.isWindows
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".object."0.36.4" = overridableMkRustCrate (profileName: rec {
      name = "object";
      version = "0.36.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "084f1a5821ac4c651660a94a7153d27ac9d8a53736203f58b31945ded098070a";
      };
      features = builtins.concatLists [
        ["archive"]
        ["coff"]
        ["elf"]
        ["macho"]
        ["pe"]
        ["read_core"]
        ["unaligned"]
        ["xcoff"]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" = overridableMkRustCrate (profileName: rec {
      name = "once_cell";
      version = "1.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["race"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "overload";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.3" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27";
      };
      features = builtins.concatLists [
        ["default"]
      ];
      dependencies = {
        lock_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" {inherit profileName;}).out;
        parking_lot_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.10" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.10" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot_core";
      version = "0.9.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "redox"
          then "syscall"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.3" {inherit profileName;}).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_targets"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" = overridableMkRustCrate (profileName: rec {
      name = "paste";
      version = "1.0.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.7.0" = overridableMkRustCrate (profileName: rec {
      name = "pem-rfc7468";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412";
      };
      features = builtins.concatLists [
        ["alloc"]
      ];
      dependencies = {
        base64ct = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" = overridableMkRustCrate (profileName: rec {
      name = "percent-encoding";
      version = "2.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.14" = overridableMkRustCrate (profileName: rec {
      name = "pin-project-lite";
      version = "0.2.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "pin-utils";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pkcs1."0.7.5" = overridableMkRustCrate (profileName: rec {
      name = "pkcs1";
      version = "0.7.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["pem"]
        ["pkcs8"]
        ["std"]
        ["zeroize"]
      ];
      dependencies = {
        der = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.9" {inherit profileName;}).out;
        pkcs8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" {inherit profileName;}).out;
        spki = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.3" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" = overridableMkRustCrate (profileName: rec {
      name = "pkcs8";
      version = "0.10.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["pem"]
        ["std"]
      ];
      dependencies = {
        der = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.9" {inherit profileName;}).out;
        spki = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.3" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "pkg-config";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" = overridableMkRustCrate (profileName: rec {
      name = "ppv-lite86";
      version = "0.2.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04";
      };
      features = builtins.concatLists [
        ["simd"]
        ["std"]
      ];
      dependencies = {
        zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro2";
      version = "1.0.86";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77";
      };
      features = builtins.concatLists [
        ["default"]
        ["proc-macro"]
      ];
      dependencies = {
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" = overridableMkRustCrate (profileName: rec {
      name = "quote";
      version = "1.0.37";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af";
      };
      features = builtins.concatLists [
        ["default"]
        ["proc-macro"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "rand";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["getrandom"]
        ["libc"]
        ["rand_chacha"]
        ["std"]
        ["std_rng"]
      ];
      dependencies = {
        ${
          if hostPlatform.isUnix
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        rand_chacha = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" {inherit profileName;}).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "rand_chacha";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88";
      };
      features = builtins.concatLists [
        ["std"]
      ];
      dependencies = {
        ppv_lite86 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" {inherit profileName;}).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" = overridableMkRustCrate (profileName: rec {
      name = "rand_core";
      version = "0.6.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["getrandom"]
        ["std"]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.3" = overridableMkRustCrate (profileName: rec {
      name = "redox_syscall";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "2a908a6e00f1fdd0dfd9c0eb08ce85126f6d8bbda50017e74bc4a4b7d4a926a4";
      };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rsa."0.9.6" = overridableMkRustCrate (profileName: rec {
      name = "rsa";
      version = "0.9.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5d0e5124fcb30e76a7e79bfee683a2746db83784b86289f6251b54b7950a0dfc";
      };
      features = builtins.concatLists [
        ["default"]
        ["pem"]
        ["std"]
        ["u64_digit"]
      ];
      dependencies = {
        const_oid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.6" {inherit profileName;}).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
        num_bigint = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint-dig."0.8.4" {inherit profileName;}).out;
        num_integer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" {inherit profileName;}).out;
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" {inherit profileName;}).out;
        pkcs1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs1."0.7.5" {inherit profileName;}).out;
        pkcs8 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" {inherit profileName;}).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;}).out;
        signature = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".signature."2.2.0" {inherit profileName;}).out;
        spki = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.3" {inherit profileName;}).out;
        subtle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" {inherit profileName;}).out;
        zeroize = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.24" = overridableMkRustCrate (profileName: rec {
      name = "rustc-demangle";
      version = "0.1.24";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.36" = overridableMkRustCrate (profileName: rec {
      name = "rustix";
      version = "0.38.36";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "3f55e80d50763938498dd5ebb18647174e0c76dc38c5505294bb224624f30f36";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["fs"]
        ["libc-extra-traits"]
        ["std"]
        ["use-libc-auxv"]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) || hostPlatform.isWindows
          then "libc_errno"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".errno."0.3.9" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64))
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64))
          then "linux_raw_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.14" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" = overridableMkRustCrate (profileName: rec {
      name = "ryu";
      version = "1.0.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" = overridableMkRustCrate (profileName: rec {
      name = "scopeguard";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" = overridableMkRustCrate (profileName: rec {
      name = "serde";
      version = "1.0.210";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c8e3592472072e6e22e0a54d5904d9febf8508f65fb8552499a1abc7d1078c3a";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["derive"]
        ["rc"]
        ["serde_derive"]
        ["std"]
      ];
      dependencies = {
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.210" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.210" = overridableMkRustCrate (profileName: rec {
      name = "serde_derive";
      version = "1.0.210";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "243902eda00fad750862fc144cea25caca5e20d615af0a81bee94ca738f1df1f";
      };
      features = builtins.concatLists [
        ["default"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.128" = overridableMkRustCrate (profileName: rec {
      name = "serde_json";
      version = "1.0.128";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6ff5456707a1de34e7e37f2a6fd3d3f808c318259cbd01ab6377795054b483d8";
      };
      features = builtins.concatLists [
        ["default"]
        ["raw_value"]
        ["std"]
      ];
      dependencies = {
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.18" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" = overridableMkRustCrate (profileName: rec {
      name = "sha1";
      version = "0.10.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64"
          then "cpufeatures"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" {inherit profileName;}).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" = overridableMkRustCrate (profileName: rec {
      name = "sha2";
      version = "0.10.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "i686"
          then "cpufeatures"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.14" {inherit profileName;}).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.7" = overridableMkRustCrate (profileName: rec {
      name = "sharded-slab";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6";
      };
      dependencies = {
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.5.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".shlex."1.3.0" = overridableMkRustCrate (profileName: rec {
      name = "shlex";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".signature."2.2.0" = overridableMkRustCrate (profileName: rec {
      name = "signature";
      version = "2.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["digest"]
        ["rand_core"]
        ["std"]
      ];
      dependencies = {
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" = overridableMkRustCrate (profileName: rec {
      name = "slab";
      version = "0.4.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.3.0" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" = overridableMkRustCrate (profileName: rec {
      name = "smallvec";
      version = "1.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" = overridableMkRustCrate (profileName: rec {
      name = "socket2";
      version = "0.5.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c";
      };
      features = builtins.concatLists [
        ["all"]
      ];
      dependencies = {
        ${
          if hostPlatform.isUnix
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" = overridableMkRustCrate (profileName: rec {
      name = "spin";
      version = "0.9.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67";
      };
      features = builtins.concatLists [
        ["barrier"]
        ["default"]
        ["lazy"]
        ["lock_api"]
        ["lock_api_crate"]
        ["mutex"]
        ["once"]
        ["rwlock"]
        ["spin_mutex"]
      ];
      dependencies = {
        lock_api_crate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.12" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".spki."0.7.3" = overridableMkRustCrate (profileName: rec {
      name = "spki";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["pem"]
        ["std"]
      ];
      dependencies = {
        base64ct = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" {inherit profileName;}).out;
        der = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.9" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlformat."0.2.6" = overridableMkRustCrate (profileName: rec {
      name = "sqlformat";
      version = "0.2.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7bba3a93db0cc4f7bdece8bb09e77e2e785c20bfebf79eb8340ed80708048790";
      };
      dependencies = {
        nom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" {inherit profileName;}).out;
        unicode_categories = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c9a2ccff1a000a5a59cd33da541d9f2fdcd9e6e8229cc200565942bff36d0aaa";
      };
      features = builtins.concatLists [
        ["_rt-tokio"]
        ["any"]
        ["chrono"]
        ["default"]
        ["json"]
        ["macros"]
        ["migrate"]
        (lib.optional (rootFeatures' ? "app-queue/postgres") "postgres")
        ["runtime-tokio"]
        (lib.optional (rootFeatures' ? "app-queue/default" || rootFeatures' ? "app-queue/sqlite") "sqlite")
        ["sqlx-macros"]
        (lib.optional (rootFeatures' ? "app-queue/postgres") "sqlx-postgres")
        (lib.optional (rootFeatures' ? "app-queue/default" || rootFeatures' ? "app-queue/sqlite") "sqlx-sqlite")
      ];
      dependencies = {
        sqlx_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" {inherit profileName;}).out;
        sqlx_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-macros."0.7.4" {profileName = "__noProfile";}).out;
        sqlx_mysql = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-mysql."0.7.4" {inherit profileName;}).out;
        sqlx_postgres = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-postgres."0.7.4" {inherit profileName;}).out;
        sqlx_sqlite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-sqlite."0.7.4" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx-core";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "24ba59a9342a3d9bab6c56c118be528b27c9b60e490080e9711a04dccac83ef6";
      };
      features = builtins.concatLists [
        ["_rt-tokio"]
        ["any"]
        ["chrono"]
        ["crc"]
        ["default"]
        ["json"]
        ["migrate"]
        ["offline"]
        ["serde"]
        ["serde_json"]
        ["sha2"]
        ["tokio"]
        ["tokio-stream"]
      ];
      dependencies = {
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" {inherit profileName;}).out;
        atoi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;}).out;
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" {inherit profileName;}).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.7.1" {inherit profileName;}).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" {inherit profileName;}).out;
        crc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc."3.2.1" {inherit profileName;}).out;
        crossbeam_queue = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.3.11" {inherit profileName;}).out;
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" {inherit profileName;}).out;
        event_listener = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" {inherit profileName;}).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" {inherit profileName;}).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_intrusive = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-intrusive."0.5.0" {inherit profileName;}).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" {inherit profileName;}).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" {inherit profileName;}).out;
        hashlink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashlink."0.8.4" {inherit profileName;}).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;}).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.5.0" {inherit profileName;}).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        paste = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" {profileName = "__noProfile";}).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.128" {inherit profileName;}).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" {inherit profileName;}).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" {inherit profileName;}).out;
        sqlformat = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlformat."0.2.6" {inherit profileName;}).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.63" {inherit profileName;}).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.40.0" {inherit profileName;}).out;
        tokio_stream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.16" {inherit profileName;}).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" {inherit profileName;}).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx-macros."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx-macros";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "4ea40e2345eb2faa9e1e5e326db8c34711317d2b5e08d0d5741619048a803127";
      };
      features = builtins.concatLists [
        ["_rt-tokio"]
        ["chrono"]
        ["default"]
        ["json"]
        ["migrate"]
        (lib.optional (rootFeatures' ? "app-queue/postgres") "postgres")
        (lib.optional (rootFeatures' ? "app-queue/default" || rootFeatures' ? "app-queue/sqlite") "sqlite")
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        sqlx_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" {inherit profileName;}).out;
        sqlx_macros_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-macros-core."0.7.4" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx-macros-core."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx-macros-core";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5833ef53aaa16d860e92123292f1f6a3d53c34ba8b1969f152ef1a7bb803f3c8";
      };
      features = builtins.concatLists [
        ["_rt-tokio"]
        ["chrono"]
        ["default"]
        ["json"]
        ["migrate"]
        (lib.optional (rootFeatures' ? "app-queue/postgres") "postgres")
        (lib.optional (rootFeatures' ? "app-queue/default" || rootFeatures' ? "app-queue/sqlite") "sqlite")
        (lib.optional (rootFeatures' ? "app-queue/postgres") "sqlx-postgres")
        (lib.optional (rootFeatures' ? "app-queue/default" || rootFeatures' ? "app-queue/sqlite") "sqlx-sqlite")
        ["tokio"]
      ];
      dependencies = {
        dotenvy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;}).out;
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" {inherit profileName;}).out;
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;}).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.128" {inherit profileName;}).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" {inherit profileName;}).out;
        sqlx_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" {inherit profileName;}).out;
        sqlx_mysql = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-mysql."0.7.4" {inherit profileName;}).out;
        sqlx_postgres = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-postgres."0.7.4" {inherit profileName;}).out;
        sqlx_sqlite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-sqlite."0.7.4" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;}).out;
        tempfile = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.12.0" {inherit profileName;}).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.40.0" {inherit profileName;}).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx-mysql."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx-mysql";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1ed31390216d20e538e447a7a9b959e06ed9fc51c37b514b46eb758016ecd418";
      };
      features = builtins.concatLists [
        ["any"]
        ["chrono"]
        ["json"]
        ["migrate"]
        ["offline"]
        ["serde"]
      ];
      dependencies = {
        atoi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;}).out;
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" {inherit profileName;}).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" {inherit profileName;}).out;
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" {inherit profileName;}).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.7.1" {inherit profileName;}).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" {inherit profileName;}).out;
        crc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc."3.2.1" {inherit profileName;}).out;
        digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;}).out;
        dotenvy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;}).out;
        either = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" {inherit profileName;}).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" {inherit profileName;}).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" {inherit profileName;}).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" {inherit profileName;}).out;
        generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;}).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;}).out;
        hkdf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.4" {inherit profileName;}).out;
        hmac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;}).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" {inherit profileName;}).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        md5 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" {inherit profileName;}).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;}).out;
        rsa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rsa."0.9.6" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        sha1 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.6" {inherit profileName;}).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" {inherit profileName;}).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" {inherit profileName;}).out;
        sqlx_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" {inherit profileName;}).out;
        stringprep = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stringprep."0.1.5" {inherit profileName;}).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.63" {inherit profileName;}).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" {inherit profileName;}).out;
        whoami = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".whoami."1.5.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx-postgres."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx-postgres";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7c824eb80b894f926f89a0b9da0c7f435d27cdd35b8c655b114e58223918577e";
      };
      features = builtins.concatLists [
        ["any"]
        ["chrono"]
        ["json"]
        ["migrate"]
        ["offline"]
      ];
      dependencies = {
        atoi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;}).out;
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" {inherit profileName;}).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.6.0" {inherit profileName;}).out;
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" {inherit profileName;}).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" {inherit profileName;}).out;
        crc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc."3.2.1" {inherit profileName;}).out;
        dotenvy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.kernel.name == "windows"
          then "etcetera"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".etcetera."0.8.0" {inherit profileName;}).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" {inherit profileName;}).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" {inherit profileName;}).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" {inherit profileName;}).out;
        hex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;}).out;
        hkdf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.4" {inherit profileName;}).out;
        hmac = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;}).out;
        home = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.9" {inherit profileName;}).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.11" {inherit profileName;}).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        md5 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" {inherit profileName;}).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.128" {inherit profileName;}).out;
        sha2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.8" {inherit profileName;}).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" {inherit profileName;}).out;
        sqlx_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" {inherit profileName;}).out;
        stringprep = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".stringprep."0.1.5" {inherit profileName;}).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.63" {inherit profileName;}).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" {inherit profileName;}).out;
        whoami = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".whoami."1.5.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sqlx-sqlite."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "sqlx-sqlite";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b244ef0a8414da0bed4bb1910426e890b19e5e9bccc27ada6b797d05c55ae0aa";
      };
      features = builtins.concatLists [
        ["any"]
        ["chrono"]
        ["json"]
        ["migrate"]
        ["offline"]
        ["serde"]
      ];
      dependencies = {
        atoi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;}).out;
        chrono = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.38" {inherit profileName;}).out;
        flume = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flume."0.11.0" {inherit profileName;}).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" {inherit profileName;}).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        futures_executor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.30" {inherit profileName;}).out;
        futures_intrusive = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-intrusive."0.5.0" {inherit profileName;}).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" {inherit profileName;}).out;
        libsqlite3_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libsqlite3-sys."0.27.0" {inherit profileName;}).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        sqlx_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.4" {inherit profileName;}).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" {inherit profileName;}).out;
        url = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" {inherit profileName;}).out;
        urlencoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".stringprep."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "stringprep";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "7b4df3d392d81bd458a8a621b8bffbd2302a12ffe288a9d931670948749463b1";
      };
      dependencies = {
        unicode_bidi = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.15" {inherit profileName;}).out;
        unicode_normalization = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.23" {inherit profileName;}).out;
        unicode_properties = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-properties."0.1.2" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".subtle."2.6.1" = overridableMkRustCrate (profileName: rec {
      name = "subtle";
      version = "2.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "1.0.109";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237";
      };
      features = builtins.concatLists [
        ["clone-impls"]
        ["derive"]
        ["full"]
        ["parsing"]
        ["printing"]
        ["proc-macro"]
        ["quote"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "2.0.77";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9f35bcdf61fd8e7be6caf75f429fdca8beb3ed76584befb503b1569faee373ed";
      };
      features = builtins.concatLists [
        ["clone-impls"]
        ["default"]
        ["derive"]
        ["extra-traits"]
        ["full"]
        ["parsing"]
        ["printing"]
        ["proc-macro"]
        ["visit"]
        ["visit-mut"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.12.0" = overridableMkRustCrate (profileName: rec {
      name = "tempfile";
      version = "3.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        fastrand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.1.1" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi"
          then "rustix"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.36" {inherit profileName;}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.63" = overridableMkRustCrate (profileName: rec {
      name = "thiserror";
      version = "1.0.63";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724";
      };
      dependencies = {
        thiserror_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.63" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.63" = overridableMkRustCrate (profileName: rec {
      name = "thiserror-impl";
      version = "1.0.63";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.8" = overridableMkRustCrate (profileName: rec {
      name = "thread_local";
      version = "1.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c";
      };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" = overridableMkRustCrate (profileName: rec {
      name = "tinyvec";
      version = "1.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
        ["tinyvec_macros"]
      ];
      dependencies = {
        tinyvec_macros = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "tinyvec_macros";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio."1.40.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio";
      version = "1.40.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e2b070231665d27ad9ec9b8df639893f46727666c6767db40317fbe920a5d998";
      };
      features = builtins.concatLists [
        ["bytes"]
        ["default"]
        ["fs"]
        ["io-util"]
        ["libc"]
        ["macros"]
        ["mio"]
        ["net"]
        ["rt"]
        ["rt-multi-thread"]
        ["socket2"]
        ["sync"]
        ["time"]
        ["tokio-macros"]
        ["windows-sys"]
      ];
      dependencies = {
        ${
          if false
          then "backtrace"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.74" {inherit profileName;}).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.7.1" {inherit profileName;}).out;
        ${
          if hostPlatform.isUnix
          then "libc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.158" {inherit profileName;}).out;
        mio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."1.0.2" {inherit profileName;}).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.14" {inherit profileName;}).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.7" {inherit profileName;}).out;
        tokio_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.4.0" {profileName = "__noProfile";}).out;
        ${
          if hostPlatform.isWindows
          then "windows_sys"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.4.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio-macros";
      version = "2.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.16" = overridableMkRustCrate (profileName: rec {
      name = "tokio-stream";
      version = "0.1.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "4f4e6ce100d0eb49a2734f8c0812bcd324cf357d21810932c5df6b96ef2b86f1";
      };
      features = builtins.concatLists [
        ["default"]
        ["fs"]
        ["time"]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" {inherit profileName;}).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.14" {inherit profileName;}).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.40.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" = overridableMkRustCrate (profileName: rec {
      name = "tracing";
      version = "0.1.40";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef";
      };
      features = builtins.concatLists [
        ["attributes"]
        ["default"]
        ["log"]
        ["std"]
        ["tracing-attributes"]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.14" {inherit profileName;}).out;
        tracing_attributes = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.27" {profileName = "__noProfile";}).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.27" = overridableMkRustCrate (profileName: rec {
      name = "tracing-attributes";
      version = "0.1.27";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" = overridableMkRustCrate (profileName: rec {
      name = "tracing-core";
      version = "0.1.32";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54";
      };
      features = builtins.concatLists [
        ["default"]
        ["once_cell"]
        ["std"]
        ["valuable"]
      ];
      dependencies = {
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        ${
          if false
          then "valuable"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "tracing-log";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3";
      };
      features = builtins.concatLists [
        ["log-tracer"]
        ["std"]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" = overridableMkRustCrate (profileName: rec {
      name = "tracing-subscriber";
      version = "0.3.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["ansi"]
        ["default"]
        ["fmt"]
        ["nu-ansi-term"]
        ["registry"]
        ["sharded-slab"]
        ["smallvec"]
        ["std"]
        ["thread_local"]
        ["tracing-log"]
      ];
      dependencies = {
        nu_ansi_term = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" {inherit profileName;}).out;
        sharded_slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.7" {inherit profileName;}).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" {inherit profileName;}).out;
        thread_local = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.8" {inherit profileName;}).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" {inherit profileName;}).out;
        tracing_log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".typeid."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "typeid";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0e13db2e0ccd5e14a544e8a246ba2312cd25223f616442d7f2cb0e3db614236e";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" = overridableMkRustCrate (profileName: rec {
      name = "typenum";
      version = "1.17.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".typetag."0.2.18" = overridableMkRustCrate (profileName: rec {
      name = "typetag";
      version = "0.2.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "52ba3b6e86ffe0054b2c44f2d86407388b933b16cb0a70eea3929420db1d9bbe";
      };
      dependencies = {
        erased_serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".erased-serde."0.4.5" {inherit profileName;}).out;
        inventory = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".inventory."0.3.15" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.210" {inherit profileName;}).out;
        typetag_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".typetag-impl."0.2.18" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".typetag-impl."0.2.18" = overridableMkRustCrate (profileName: rec {
      name = "typetag-impl";
      version = "0.2.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "70b20a22c42c8f1cd23ce5e34f165d4d37038f5b663ad20fb6adbdf029172483";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.15" = overridableMkRustCrate (profileName: rec {
      name = "unicode-bidi";
      version = "0.3.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75";
      };
      features = builtins.concatLists [
        ["default"]
        ["hardcoded-data"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.13" = overridableMkRustCrate (profileName: rec {
      name = "unicode-ident";
      version = "1.0.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.23" = overridableMkRustCrate (profileName: rec {
      name = "unicode-normalization";
      version = "0.1.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
      dependencies = {
        tinyvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.8.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-properties."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "unicode-properties";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "52ea75f83c0137a9b98608359a5f1af8144876eb67bcb1ce837368e906a9f524";
      };
      features = builtins.concatLists [
        ["default"]
        ["emoji"]
        ["general-category"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.11.0" = overridableMkRustCrate (profileName: rec {
      name = "unicode-segmentation";
      version = "1.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "unicode_categories";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".url."2.5.2" = overridableMkRustCrate (profileName: rec {
      name = "url";
      version = "2.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "22784dbdf76fdde8af1aeda5622b546b422b6fc585325248a2bf9f5e41e94d6c";
      };
      dependencies = {
        form_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" {inherit profileName;}).out;
        idna = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.5.0" {inherit profileName;}).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" = overridableMkRustCrate (profileName: rec {
      name = "urlencoding";
      version = "2.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".uuid."1.10.0" = overridableMkRustCrate (profileName: rec {
      name = "uuid";
      version = "1.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "81dfa00651efa65069b0b6b651f4aaa31ba9e3c3ce0137aaad053604ee7e0314";
      };
      features = builtins.concatLists [
        ["default"]
        ["rng"]
        ["std"]
        ["v4"]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "valuable";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" = overridableMkRustCrate (profileName: rec {
      name = "vcpkg";
      version = "0.2.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" = overridableMkRustCrate (profileName: rec {
      name = "version_check";
      version = "0.9.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
      name = "wasi";
      version = "0.11.0+wasi-snapshot-preview1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423";
      };
      features = builtins.concatLists [
        ["default"]
        ["std"]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasite."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "wasite";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "b8dad83b4f25e74f184f64c43b150b91efe7647395b42289f38e50566d82855b";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.93" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen";
      version = "0.2.93";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a82edfc16a6c469f5f44dc7b571814045d60404b55a0ee849f9bcfa2e63dd9b5";
      };
      features = builtins.concatLists [
        ["default"]
        ["spans"]
        ["std"]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        wasm_bindgen_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.93" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.93" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-backend";
      version = "0.2.93";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9de396da306523044d3302746f1208fa71d7532227f15e347e2d93e4145dd77b";
      };
      features = builtins.concatLists [
        ["spans"]
      ];
      dependencies = {
        bumpalo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.16.0" {inherit profileName;}).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.22" {inherit profileName;}).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" {inherit profileName;}).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.93" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.93" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro";
      version = "0.2.93";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "585c4c91a46b072c92e908d99cb1dcdf95c5218eeb6f3bf1efa991ee7a68cccf";
      };
      features = builtins.concatLists [
        ["spans"]
      ];
      dependencies = {
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        wasm_bindgen_macro_support = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.93" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.93" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro-support";
      version = "0.2.93";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "afc340c74d9005395cf9dd098506f7f44e38f2b4a21c6aaacf9a105ea5e1e836";
      };
      features = builtins.concatLists [
        ["spans"]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
        wasm_bindgen_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.93" {inherit profileName;}).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.93" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.93" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-shared";
      version = "0.2.93";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "c62a0a307cb4a311d3a07867860911ca130c3494e8c2719593806c08bc5d0484";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".whoami."1.5.2" = overridableMkRustCrate (profileName: rec {
      name = "whoami";
      version = "1.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "372d5b87f58ec45c384ba03563b03544dc5fadc3983e434b286913f5b4a9bb6d";
      };
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "redox" && !(hostPlatform.parsed.cpu.name == "wasm32")
          then "syscall"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.5.3" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "wasi"
          then "wasite"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasite."0.1.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "winapi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419";
      };
      features = builtins.concatLists [
        ["consoleapi"]
        ["errhandlingapi"]
        ["fileapi"]
        ["handleapi"]
        ["processenv"]
      ];
      dependencies = {
        ${
          if hostPlatform.config == "i686-pc-windows-gnu"
          then "winapi_i686_pc_windows_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "x86_64-pc-windows-gnu"
          then "winapi_x86_64_pc_windows_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-core";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9";
      };
      features = builtins.concatLists [
        ["default"]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.48.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9";
      };
      features = builtins.concatLists [
        ["Win32"]
        ["Win32_Foundation"]
        ["Win32_UI"]
        ["Win32_UI_Shell"]
        ["default"]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d";
      };
      features = builtins.concatLists [
        ["Wdk"]
        ["Wdk_Foundation"]
        ["Wdk_Storage"]
        ["Wdk_Storage_FileSystem"]
        ["Wdk_System"]
        ["Wdk_System_IO"]
        ["Win32"]
        ["Win32_Foundation"]
        ["Win32_NetworkManagement"]
        ["Win32_NetworkManagement_IpHelper"]
        ["Win32_Networking"]
        ["Win32_Networking_WinSock"]
        ["Win32_Security"]
        ["Win32_Storage"]
        ["Win32_Storage_FileSystem"]
        ["Win32_System"]
        ["Win32_System_Com"]
        ["Win32_System_Diagnostics"]
        ["Win32_System_Diagnostics_Debug"]
        ["Win32_System_IO"]
        ["Win32_System_Pipes"]
        ["Win32_System_SystemServices"]
        ["Win32_System_Threading"]
        ["Win32_System_WindowsProgramming"]
        ["Win32_UI"]
        ["Win32_UI_Shell"]
        ["default"]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.59.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b";
      };
      features = builtins.concatLists [
        ["Win32"]
        ["Win32_Foundation"]
        ["Win32_Storage"]
        ["Win32_Storage_FileSystem"]
        ["default"]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c";
      };
      dependencies = {
        ${
          if hostPlatform.config == "aarch64-pc-windows-gnullvm"
          then "windows_aarch64_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_aarch64_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu"
          then "windows_i686_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_i686_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu"
          then "windows_x86_64_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "x86_64-pc-windows-gnullvm"
          then "windows_x86_64_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_x86_64_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973";
      };
      dependencies = {
        ${
          if hostPlatform.config == "aarch64-pc-windows-gnullvm"
          then "windows_aarch64_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_aarch64_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu"
          then "windows_i686_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "i686-pc-windows-gnullvm"
          then "windows_i686_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc"
          then "windows_i686_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu"
          then "windows_x86_64_gnu"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" {inherit profileName;}).out;
        ${
          if hostPlatform.config == "x86_64-pc-windows-gnullvm"
          then "windows_x86_64_gnullvm"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" {inherit profileName;}).out;
        ${
          if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "arm64ec") && hostPlatform.parsed.abi.name == "msvc"
          then "windows_x86_64_msvc"
          else null
        } =
          (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.52.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec";
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" = overridableMkRustCrate (profileName: rec {
      name = "zerocopy";
      version = "0.7.35";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0";
      };
      features = builtins.concatLists [
        ["byteorder"]
        ["default"]
        ["derive"]
        ["simd"]
        ["zerocopy-derive"]
      ];
      dependencies = {
        byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" {inherit profileName;}).out;
        zerocopy_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.35" {profileName = "__noProfile";}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.35" = overridableMkRustCrate (profileName: rec {
      name = "zerocopy-derive";
      version = "0.7.35";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e";
      };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.86" {inherit profileName;}).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.37" {inherit profileName;}).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.77" {inherit profileName;}).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zeroize."1.8.1" = overridableMkRustCrate (profileName: rec {
      name = "zeroize";
      version = "1.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 = "ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde";
      };
      features = builtins.concatLists [
        ["alloc"]
        ["default"]
      ];
    });
  }
